{"version":3,"sources":["components/Welcome/Welcome.js","components/Quiz/ProgressBar.js","components/Quiz/Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["Welcome","startQuiz","className","style","height","onClick","ProgressBar","props","bgcolor","completed","fillerStyles","width","backgroundColor","borderRadius","textAlign","Quiz","useState","loading","setLoading","quiz","setQuiz","currentQuestion","setCurrentQuestion","result","setResult","timer","setTimer","useEffect","fetch","then","res","json","data","startTimer","setInterval","clearInterval","length","question","Object","entries","answers","map","key","value","event","nextQuestion","handleClick","App","quizButton","setQuizButton","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d79d0c0.chunk.js","sourcesContent":["import { Fragment } from 'react'\r\nimport './Welcome.css'\r\n\r\nfunction Welcome({ startQuiz }) {\r\n    return (\r\n        <Fragment>\r\n            <p className='quiz-title flex-center'>Welcome to the Javascript Quiz App</p>\r\n            <div className=\"flex-center\" style={{ height: '75vh' }}>\r\n                <button className='start-quiz-button' onClick={startQuiz}>Start Quiz</button>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Welcome","import React from \"react\";\r\n\r\nconst ProgressBar = (props) => {\r\n    const { bgcolor, completed } = props;\r\n  \r\n    const containerStyles = {\r\n      height: 20,\r\n      width: '30%',\r\n      backgroundColor: \"#fff\",\r\n      borderRadius: 20,\r\n    }\r\n  \r\n    const fillerStyles = {\r\n      height: 'inherit',\r\n      width: `${completed}%`,\r\n      backgroundColor: bgcolor,\r\n      borderRadius: 'inherit',\r\n      textAlign: 'right'\r\n    }\r\n  \r\n    return (\r\n      <div style={containerStyles}>\r\n        <div style={fillerStyles}></div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default ProgressBar;","import { useState, useEffect, Fragment } from \"react\"\r\nimport './Quiz.css'\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nfunction Quiz() {\r\n    const [loading,setLoading] = useState(true)\r\n    const [quiz,setQuiz] = useState([])\r\n    const [currentQuestion,setCurrentQuestion] = useState(0)\r\n    const [score,setScore] = useState(0)\r\n    const [result,setResult] = useState(false)\r\n    const [timer,setTimer] = useState(15)\r\n\r\n    useEffect(() => {\r\n        fetch(`https://quizapi.io/api/v1/questions?apiKey=bp25pdADXD2rVjdNtGhU5J0hA69WKDkc1bSNco2p&limit=15&tags=Javascript`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setQuiz(data)\r\n            setLoading(false)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let startTimer = setInterval(() => {\r\n            setTimer(timer - 1)\r\n        }, 1000)\r\n\r\n        if(currentQuestion === 14 && timer === 0) {\r\n            setResult(true)\r\n        }\r\n\r\n        if(timer === 0) {\r\n            clearInterval(startTimer)\r\n            setTimer(15)\r\n            setCurrentQuestion(currentQuestion + 1)\r\n        }\r\n\r\n        return () => clearInterval(startTimer)\r\n    }, [timer])\r\n    \r\n    const handleClick = (key) => {\r\n        let nextQuestion = currentQuestion + 1\r\n\r\n        setTimer(15)\r\n        \r\n        if (nextQuestion < 15) {\r\n            setCurrentQuestion(nextQuestion)\r\n        } else {\r\n            setResult(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                result ? \r\n                (\r\n                    <div className='flex-center' style={{ height: '100vh' }}>\r\n                        <p className='results-page'>Thanks for taking the quiz!!!</p>\r\n                    </div>) \r\n                : \r\n                (\r\n                    <Fragment>\r\n                        <p className='quiz-title flex-center'>Welcome to the Javascript Quiz App</p>\r\n                        <div className='flex-center progress-bar'>\r\n                            <span className='progress-bar-text'>Question: {currentQuestion + 1}/15</span>\r\n                            <ProgressBar bgcolor={\"blue\"} completed={(currentQuestion/15 * 100)}/>\r\n                        </div>\r\n                        <div className='flex-center' style={{height: '75vh'}}>\r\n                            {\r\n                                (!loading && quiz.length > 0) ? (\r\n                                <div className='question-container'>\r\n                                    <div className='individual-question flex-column'>\r\n                                        {quiz[currentQuestion].question}\r\n                                        <p className='time-left'>Time Left: {timer} sec</p>\r\n                                    </div>\r\n                                    \r\n                                    <div className='answers'>\r\n                                    {\r\n                                        Object.entries(quiz[currentQuestion].answers).map(([key, value]) => {\r\n                                        return value ? <button key={key} className='individual-answer' onClick={(event) => {handleClick(event)}}>{value}</button> : null\r\n                                        })\r\n                                    }\r\n                                    </div>\r\n                                </div>\r\n                                ) : <div> Loading </div>\r\n                            }\r\n                        </div>\r\n                    </Fragment>\r\n                )\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Quiz","import { useState, useEffect, Fragment } from 'react'\nimport Welcome from './components/Welcome/Welcome'\nimport Quiz from './components/Quiz/Quiz'\n\nfunction App() { \n  const [quizButton, setQuizButton] = useState(true)\n\n  const start = () => {\n      setQuizButton(false)\n  }\n\n  return (\n    <div className=\"App\">\n      {\n        quizButton ? <Welcome startQuiz={start}/> : <Quiz />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}